	Originally, we went with Martus for our project and were aiming to develop a testing framework for this. However, after some digging, we discovered that the project was dead. Many of the dependencies that were required for compiling and running this code were out-of-date and many of them were not hosted for download any longer. Given that we could not compile the code independently and that the project was dead, we decided to consider changing projects. 
	We went back to the drawing board, and revisited our second choices for projects. Cadasta, a land-rights documentation program, caught out attention. There were over 1,000 commits and they were as recent as the previous week. Additionally, the dependencies were up-to-date and their github wiki had an easily understood installation instructions for development. Essentially, to install Cadasta for development, the user creates a Vagrant VM to run as their Cadasta server, and then they can SSH into the server to run commands. 
	What we found inside was that Cadasta had a fairly comprehensive testing framework already implemented. Runtests.py runs all of their unit tests and reports the results. Additionally, they provide the option to export these test results to html files. After the tests are finished, it reports a quick overall result: "1998 passed, 501 warnings in 972.86 seconds." 
	When examining the test result's directory, what you find is a collection of many html files that correspond to each unit of the software. At the bottom, is an html file labeled "index" that provides a quick overview of all test results. If you wish to view a specific test, however, you can browse to that html file specifically. What this does is it allows a developer to get a quick, comprehensive overview of all the unit tests, but still allows them to delve deeper and get a granular view of the unit tests. 
	Altogether, Cadasta appears to be a much more approachable project that is aimed at OSS development. The easy installation instructions combined with a well-maintained code base give much more confidence than Martus. Additionally, the current testing framework inspires ideas for furthering the testing database. 
